import os
import logging
import json
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

from counter import increment_counter  # <-- —Å—á—ë—Ç—á–∏–∫ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ===
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# === –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö ===
DATA_FILE = "orders.json"

def load_orders() -> dict:
    try:
        with open(DATA_FILE, "r") as f:
            return json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        return {}

def save_orders(data: dict):
    try:
        with open(DATA_FILE, "w") as f:
            json.dump(data, f, indent=2)
    except IOError as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")

# === –ú–µ–Ω—é ===
def get_main_menu():
    return ReplyKeyboardMarkup([
        [KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å –º–æ–Ω—Ç–∞–∂")],
        [KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å –ò–ò –∫–æ–Ω—Ç–µ–Ω—Ç")],
        [KeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")],
        [KeyboardButton("–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Ä–∞–±–æ—Ç")],
        [KeyboardButton("–°–∞–π—Ç(–±–æ–ª—å—à–µ –æ –Ω–∞—Å)")]
    ], resize_keyboard=True)

def get_services_menu_montage():
    return ReplyKeyboardMarkup([
        [KeyboardButton("–í–∏–¥–µ–æ –¥–ª—è Tiktok / Instagram")],
        [KeyboardButton("–í–∏–¥–µ–æ –¥–ª—è Youtube")],
        [KeyboardButton("–†–µ–∫–ª–∞–º–Ω—ã–π —Ä–æ–ª–∏–∫")],
        [KeyboardButton("–î—Ä—É–≥–æ–µ (–º–æ–Ω—Ç–∞–∂)")],
        [KeyboardButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
    ], resize_keyboard=True)

def get_services_menu_ai():
    return ReplyKeyboardMarkup([
        [KeyboardButton("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ/—Ä–µ—Ç—É—à—å")],
        [KeyboardButton("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—É–±—Ç–∏—Ç—Ä–æ–≤")],
        [KeyboardButton("–°–æ–∑–¥–∞–Ω–∏–µ –ò–ò –∞—Å–∏—Å—Ç–µ–Ω—Ç–∞ gpts")],
        [KeyboardButton("–°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–∞")],
        [KeyboardButton("–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–∞-–æ–∑–≤—É—á–∫–∞")],
        [KeyboardButton("–°–æ–∑–¥–∞–Ω–∏–µ –ò–ò –∞–≤–∞—Ç–∞—Ä–∞")],
        [KeyboardButton("–°–æ–∑–¥–∞–Ω–∏–µ –ò–ò –±–æ—Ç–∞")],
        [KeyboardButton("–°–æ–∑–¥–∞–Ω–∏–µ Telegram –±–æ—Ç–∞")],
        [KeyboardButton("–î—Ä—É–≥–æ–µ (–ò–ò)")],
        [KeyboardButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
    ], resize_keyboard=True)

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        await update.message.reply_text(
            "üëã –ü—Ä–∏–≤–µ—Ç! –¢—ã –ø–æ–ø–∞–ª –≤ NeuroLux ‚Äî —Å–µ—Ä–≤–∏—Å, –≥–¥–µ —Ç—ã –ø–æ–ª—É—á–∏—à—å:\n"
            "üî• –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –º–æ–Ω—Ç–∞–∂, –∏–ª–∏ –Ω–µ–π—Ä–æ-–∫–æ–Ω—Ç–µ–Ω—Ç.\n"
            "‚è±Ô∏è –ó–∞—è–≤–∫–∞ –∑–∞–π–º—ë—Ç –Ω–µ –±–æ–ª—å—à–µ 30 —Å–µ–∫—É–Ω–¥.\n"
            "üëâ –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ:",
            reply_markup=get_main_menu()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start: {e}")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        text = update.message.text
        user = update.message.from_user
        user_id = user.id
        username = user.username or user.full_name

        if text == "–ó–∞–∫–∞–∑–∞—Ç—å –º–æ–Ω—Ç–∞–∂":
            await update.message.reply_text("üé¨ –û—Ç–ª–∏—á–Ω–æ, –≤—ã–±–µ—Ä–∏ —Ç–∏–ø –º–æ–Ω—Ç–∞–∂–∞:", reply_markup=get_services_menu_montage())

        elif text == "–ó–∞–∫–∞–∑–∞—Ç—å –ò–ò –∫–æ–Ω—Ç–µ–Ω—Ç":
            await update.message.reply_text("ü§ñ –û—Ç–ª–∏—á–Ω–æ, –≤—ã–±–µ—Ä–∏ —Ç–∏–ø –ò–ò —É—Å–ª—É–≥:", reply_markup=get_services_menu_ai())

        elif text in [
            # –ú–æ–Ω—Ç–∞–∂
            "–í–∏–¥–µ–æ –¥–ª—è Tiktok / Instagram", "–í–∏–¥–µ–æ –¥–ª—è Youtube", "–†–µ–∫–ª–∞–º–Ω—ã–π —Ä–æ–ª–∏–∫", "–î—Ä—É–≥–æ–µ (–º–æ–Ω—Ç–∞–∂)",
            # –ò–ò
            "–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ/—Ä–µ—Ç—É—à—å", "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–∞-–æ–∑–≤—É—á–∫–∞", "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—É–±—Ç–∏—Ç—Ä–æ–≤", "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–∞",
            "–°–æ–∑–¥–∞–Ω–∏–µ –ò–ò –∞—Å–∏—Å—Ç–µ–Ω—Ç–∞ gpts", "–°–æ–∑–¥–∞–Ω–∏–µ –ò–ò –∞–≤–∞—Ç–∞—Ä–∞", "–°–æ–∑–¥–∞–Ω–∏–µ –ò–ò –±–æ—Ç–∞", "–°–æ–∑–¥–∞–Ω–∏–µ Telegram –±–æ—Ç–∞", "–î—Ä—É–≥–æ–µ (–ò–ò)"
        ]:
            orders = load_orders()
            user_orders = orders.get(str(user_id), 0)
            user_orders += 1
            orders[str(user_id)] = user_orders
            save_orders(orders)

            total_requests = increment_counter()
            print(f"[DEBUG] total_requests: {total_requests}")

            await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –í —Ç–µ—á–µ–Ω–∏–µ 20 –º–∏–Ω—É—Ç —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä.")
            await context.bot.send_message(
                chat_id=context.bot_data["ADMIN_ID"],
                text=f"üö® –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞: {text}\n"
                     f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}\n"
                     f"üÜî ID: {user_id}\n"
                     f"üì¶ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {user_orders}\n"
                     f"üìä –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫ –∑–∞ —Å–µ—Å—Å–∏—é: {total_requests}"
            )

        elif text == "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Ä–∞–±–æ—Ç":
            await update.message.reply_text(
                "üé® –ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–¥–µ—Å—å:\n"
                "https://t.me/neurolux2025"
            )

        elif text == "–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º":
            await update.message.reply_text("üïí –û–∂–∏–¥–∞–π—Ç–µ ‚Äî —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è, –ª–∏–±–æ –º–æ–∂–µ—Ç–µ —Å–∞–º–∏ –µ–º—É –Ω–∞–ø–∏—Å–∞—Ç—å @iksan0v")
            await context.bot.send_message(
                chat_id=context.bot_data["ADMIN_ID"],
                text=f"üìû –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–≤—è–∑—å –æ—Ç: {username} (ID: {user_id})"
            )

        elif text == "–°–∞–π—Ç(–±–æ–ª—å—à–µ –æ –Ω–∞—Å)":
            await update.message.reply_text(
                "üìù –ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∞—à–µ–º—É –æ—Ç–∑—ã–≤—É!\n"
                "https://montazh-i-oformlenie-i-jcylmrg.gamma.site/"
            )

        elif text == "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
            await update.message.reply_text("üè† –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=get_main_menu())

        else:
            await update.message.reply_text("‚ÑπÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.", reply_markup=get_main_menu())

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# === –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ===
def main():
    TOKEN = os.getenv("BOT_TOKEN")
    ADMIN_ID = os.getenv("ADMIN_ID")

    if not TOKEN or not ADMIN_ID:
        logger.error("–ù–µ –∑–∞–¥–∞–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –∏–ª–∏ ADMIN_ID")
        exit(1)

    try:
        ADMIN_ID = int(ADMIN_ID)
    except ValueError:
        logger.error("ADMIN_ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        exit(1)

    application = Application.builder().token(TOKEN).build()
    application.bot_data["ADMIN_ID"] = ADMIN_ID
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    application.run_polling()

if __name__ == "__main__":
    main()